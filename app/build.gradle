apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "com.sdk.paic.myandroidhomework"
        minSdkVersion 19
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        mytestdemo {

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }
    greendao {
        schemaVersion 1 //当前数据库版本
        daoPackage 'com.sdk.paic.myandroidhomework.greendaoutils'
        targetGenDir 'src/main/java'
    }

//    productFlavors {
//
//        vvv1 {
//
//        }
//        vvv2 {
//
//        }
//        vv3 {
//
//        }
//
//    }

    applicationVariants.all {
        variant ->
            variant.outputs.each { output ->
                if (output.outputFile != null && output.outputFile.name.endsWith('.apk')
//                        && 'release'.endsWith(variant.buildType.name)
                ) {
                    def flavorName = variant.flavorName
//                    if ('release'.endsWith(variant.buildType.name)) {
                    flavorName = flavorName + variant.buildType.name
//                    } else {
//                        flavorName = flavorName + "debug"
//                    }


                    def apkFile = new File(
                            output.outputFile.getParent(),
                            "这是一个demo_${flavorName}_v${variant.versionName}_${buildTime()}.apk")
                    output.outputFile = apkFile


                }
            }

    }
}
def buildTime() {
    def date = new Date()
    def dataTime = date.format('yyyyMMdd')
    return dataTime
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
//    compile 'com.android.support.constraint:constraint-layout:1.0.0-alpha6'
    testCompile 'junit:junit:4.12'


    compile 'com.android.support:recyclerview-v7:25.3.1'
    compile 'com.squareup.retrofit2:retrofit:2.3.0'
    compile 'com.squareup.retrofit2:converter-gson:2.3.0'
    compile 'com.jakewharton:butterknife:8.6.0'
    compile 'com.jakewharton:butterknife-compiler:8.6.0'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'com.github.bumptech.glide:glide:3.7.0'

    compile 'net.zetetic:android-database-sqlcipher:3.5.7@aar'
    compile 'org.greenrobot:greendao:3.2.2'
//    compile 'org.greenrobot:greendao:3.0.1'
//    compile 'org.greenrobot:greendao-generator:3.0.0'
}
